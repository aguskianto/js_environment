{"map":"{\"version\":3,\"sources\":[\"F:\\\\tutorials\\\\full stack developer\\\\js_environment\\\\node_modules\\\\webpack\\\\buildin\\\\global.js\"],\"names\":[\"g\",\"this\",\"Function\",\"e\",\"window\",\"module\",\"exports\"],\"mappings\":\"yEAAA,IAAAA,EAGAA,EAAA,WACA,OAAAC,KADA,GAIA,IAEAD,EAAAA,GAAA,IAAAE,SAAA,cAAA,GACC,MAAAC,GAED,iBAAAC,SAAAJ,EAAAI,QAOAC,EAAAC,QAAAN\",\"sourcesContent\":[\"var g;\\n\\n// This works in non-strict mode\\ng = (function() {\\n\\treturn this;\\n})();\\n\\ntry {\\n\\t// This works if eval is allowed (see CSP)\\n\\tg = g || new Function(\\\"return this\\\")();\\n} catch (e) {\\n\\t// This works if the window reference is available\\n\\tif (typeof window === \\\"object\\\") g = window;\\n}\\n\\n// g can still be undefined, but nothing to do about it...\\n// We return undefined, instead of nothing here, so it's\\n// easier to handle this case. if(!global) { ...}\\n\\nmodule.exports = g;\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{4:function(n,o){var t;t=function(){return this}();try{t=t||new Function(\"return this\")()}catch(n){\"object\"==typeof window&&(t=window)}n.exports=t}}]);","extractedComments":[]}