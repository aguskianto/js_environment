{"map":"{\"version\":3,\"sources\":[\"F:\\\\tutorials\\\\full stack developer\\\\js_environment\\\\node_modules\\\\whatwg-fetch\\\\fetch.js\"],\"names\":[\"support\",\"searchParams\",\"self\",\"iterable\",\"Symbol\",\"blob\",\"Blob\",\"e\",\"formData\",\"arrayBuffer\",\"viewClasses\",\"isArrayBufferView\",\"ArrayBuffer\",\"isView\",\"obj\",\"indexOf\",\"Object\",\"prototype\",\"toString\",\"call\",\"normalizeName\",\"name\",\"String\",\"test\",\"TypeError\",\"toLowerCase\",\"normalizeValue\",\"value\",\"iteratorFor\",\"items\",\"iterator\",\"next\",\"shift\",\"done\",\"undefined\",\"Headers\",\"headers\",\"this\",\"map\",\"forEach\",\"append\",\"Array\",\"isArray\",\"header\",\"getOwnPropertyNames\",\"consumed\",\"body\",\"bodyUsed\",\"Promise\",\"reject\",\"fileReaderReady\",\"reader\",\"resolve\",\"onload\",\"result\",\"onerror\",\"error\",\"readBlobAsArrayBuffer\",\"FileReader\",\"promise\",\"readAsArrayBuffer\",\"bufferClone\",\"buf\",\"slice\",\"view\",\"Uint8Array\",\"byteLength\",\"set\",\"buffer\",\"Body\",\"_initBody\",\"_bodyInit\",\"_bodyText\",\"isPrototypeOf\",\"_bodyBlob\",\"FormData\",\"_bodyFormData\",\"URLSearchParams\",\"DataView\",\"_bodyArrayBuffer\",\"get\",\"type\",\"rejected\",\"Error\",\"then\",\"text\",\"readAsText\",\"chars\",\"length\",\"i\",\"fromCharCode\",\"join\",\"readArrayBufferAsText\",\"decode\",\"json\",\"JSON\",\"parse\",\"oldValue\",\"has\",\"hasOwnProperty\",\"callback\",\"thisArg\",\"keys\",\"push\",\"values\",\"entries\",\"methods\",\"Request\",\"input\",\"options\",\"method\",\"upcased\",\"url\",\"credentials\",\"mode\",\"signal\",\"toUpperCase\",\"referrer\",\"form\",\"trim\",\"split\",\"bytes\",\"replace\",\"decodeURIComponent\",\"Response\",\"bodyInit\",\"status\",\"ok\",\"statusText\",\"clone\",\"response\",\"redirectStatuses\",\"redirect\",\"RangeError\",\"location\",\"DOMException\",\"err\",\"message\",\"stack\",\"create\",\"constructor\",\"fetch\",\"init\",\"request\",\"aborted\",\"xhr\",\"XMLHttpRequest\",\"abortXhr\",\"abort\",\"rawHeaders\",\"getAllResponseHeaders\",\"line\",\"parts\",\"key\",\"responseURL\",\"responseText\",\"ontimeout\",\"onabort\",\"open\",\"withCredentials\",\"responseType\",\"setRequestHeader\",\"addEventListener\",\"onreadystatechange\",\"readyState\",\"removeEventListener\",\"send\",\"polyfill\"],\"mappings\":\"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\",\"sourcesContent\":[\"var support = {\\n  searchParams: 'URLSearchParams' in self,\\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\\n  blob:\\n    'FileReader' in self &&\\n    'Blob' in self &&\\n    (function() {\\n      try {\\n        new Blob()\\n        return true\\n      } catch (e) {\\n        return false\\n      }\\n    })(),\\n  formData: 'FormData' in self,\\n  arrayBuffer: 'ArrayBuffer' in self\\n}\\n\\nfunction isDataView(obj) {\\n  return obj && DataView.prototype.isPrototypeOf(obj)\\n}\\n\\nif (support.arrayBuffer) {\\n  var viewClasses = [\\n    '[object Int8Array]',\\n    '[object Uint8Array]',\\n    '[object Uint8ClampedArray]',\\n    '[object Int16Array]',\\n    '[object Uint16Array]',\\n    '[object Int32Array]',\\n    '[object Uint32Array]',\\n    '[object Float32Array]',\\n    '[object Float64Array]'\\n  ]\\n\\n  var isArrayBufferView =\\n    ArrayBuffer.isView ||\\n    function(obj) {\\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\\n    }\\n}\\n\\nfunction normalizeName(name) {\\n  if (typeof name !== 'string') {\\n    name = String(name)\\n  }\\n  if (/[^a-z0-9\\\\-#$%&'*+.^_`|~]/i.test(name)) {\\n    throw new TypeError('Invalid character in header field name')\\n  }\\n  return name.toLowerCase()\\n}\\n\\nfunction normalizeValue(value) {\\n  if (typeof value !== 'string') {\\n    value = String(value)\\n  }\\n  return value\\n}\\n\\n// Build a destructive iterator for the value list\\nfunction iteratorFor(items) {\\n  var iterator = {\\n    next: function() {\\n      var value = items.shift()\\n      return {done: value === undefined, value: value}\\n    }\\n  }\\n\\n  if (support.iterable) {\\n    iterator[Symbol.iterator] = function() {\\n      return iterator\\n    }\\n  }\\n\\n  return iterator\\n}\\n\\nexport function Headers(headers) {\\n  this.map = {}\\n\\n  if (headers instanceof Headers) {\\n    headers.forEach(function(value, name) {\\n      this.append(name, value)\\n    }, this)\\n  } else if (Array.isArray(headers)) {\\n    headers.forEach(function(header) {\\n      this.append(header[0], header[1])\\n    }, this)\\n  } else if (headers) {\\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\\n      this.append(name, headers[name])\\n    }, this)\\n  }\\n}\\n\\nHeaders.prototype.append = function(name, value) {\\n  name = normalizeName(name)\\n  value = normalizeValue(value)\\n  var oldValue = this.map[name]\\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\\n}\\n\\nHeaders.prototype['delete'] = function(name) {\\n  delete this.map[normalizeName(name)]\\n}\\n\\nHeaders.prototype.get = function(name) {\\n  name = normalizeName(name)\\n  return this.has(name) ? this.map[name] : null\\n}\\n\\nHeaders.prototype.has = function(name) {\\n  return this.map.hasOwnProperty(normalizeName(name))\\n}\\n\\nHeaders.prototype.set = function(name, value) {\\n  this.map[normalizeName(name)] = normalizeValue(value)\\n}\\n\\nHeaders.prototype.forEach = function(callback, thisArg) {\\n  for (var name in this.map) {\\n    if (this.map.hasOwnProperty(name)) {\\n      callback.call(thisArg, this.map[name], name, this)\\n    }\\n  }\\n}\\n\\nHeaders.prototype.keys = function() {\\n  var items = []\\n  this.forEach(function(value, name) {\\n    items.push(name)\\n  })\\n  return iteratorFor(items)\\n}\\n\\nHeaders.prototype.values = function() {\\n  var items = []\\n  this.forEach(function(value) {\\n    items.push(value)\\n  })\\n  return iteratorFor(items)\\n}\\n\\nHeaders.prototype.entries = function() {\\n  var items = []\\n  this.forEach(function(value, name) {\\n    items.push([name, value])\\n  })\\n  return iteratorFor(items)\\n}\\n\\nif (support.iterable) {\\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\\n}\\n\\nfunction consumed(body) {\\n  if (body.bodyUsed) {\\n    return Promise.reject(new TypeError('Already read'))\\n  }\\n  body.bodyUsed = true\\n}\\n\\nfunction fileReaderReady(reader) {\\n  return new Promise(function(resolve, reject) {\\n    reader.onload = function() {\\n      resolve(reader.result)\\n    }\\n    reader.onerror = function() {\\n      reject(reader.error)\\n    }\\n  })\\n}\\n\\nfunction readBlobAsArrayBuffer(blob) {\\n  var reader = new FileReader()\\n  var promise = fileReaderReady(reader)\\n  reader.readAsArrayBuffer(blob)\\n  return promise\\n}\\n\\nfunction readBlobAsText(blob) {\\n  var reader = new FileReader()\\n  var promise = fileReaderReady(reader)\\n  reader.readAsText(blob)\\n  return promise\\n}\\n\\nfunction readArrayBufferAsText(buf) {\\n  var view = new Uint8Array(buf)\\n  var chars = new Array(view.length)\\n\\n  for (var i = 0; i < view.length; i++) {\\n    chars[i] = String.fromCharCode(view[i])\\n  }\\n  return chars.join('')\\n}\\n\\nfunction bufferClone(buf) {\\n  if (buf.slice) {\\n    return buf.slice(0)\\n  } else {\\n    var view = new Uint8Array(buf.byteLength)\\n    view.set(new Uint8Array(buf))\\n    return view.buffer\\n  }\\n}\\n\\nfunction Body() {\\n  this.bodyUsed = false\\n\\n  this._initBody = function(body) {\\n    this._bodyInit = body\\n    if (!body) {\\n      this._bodyText = ''\\n    } else if (typeof body === 'string') {\\n      this._bodyText = body\\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\\n      this._bodyBlob = body\\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\\n      this._bodyFormData = body\\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\\n      this._bodyText = body.toString()\\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\\n      this._bodyArrayBuffer = bufferClone(body.buffer)\\n      // IE 10-11 can't handle a DataView body.\\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\\n      this._bodyArrayBuffer = bufferClone(body)\\n    } else {\\n      this._bodyText = body = Object.prototype.toString.call(body)\\n    }\\n\\n    if (!this.headers.get('content-type')) {\\n      if (typeof body === 'string') {\\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\\n      } else if (this._bodyBlob && this._bodyBlob.type) {\\n        this.headers.set('content-type', this._bodyBlob.type)\\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\\n      }\\n    }\\n  }\\n\\n  if (support.blob) {\\n    this.blob = function() {\\n      var rejected = consumed(this)\\n      if (rejected) {\\n        return rejected\\n      }\\n\\n      if (this._bodyBlob) {\\n        return Promise.resolve(this._bodyBlob)\\n      } else if (this._bodyArrayBuffer) {\\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\\n      } else if (this._bodyFormData) {\\n        throw new Error('could not read FormData body as blob')\\n      } else {\\n        return Promise.resolve(new Blob([this._bodyText]))\\n      }\\n    }\\n\\n    this.arrayBuffer = function() {\\n      if (this._bodyArrayBuffer) {\\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\\n      } else {\\n        return this.blob().then(readBlobAsArrayBuffer)\\n      }\\n    }\\n  }\\n\\n  this.text = function() {\\n    var rejected = consumed(this)\\n    if (rejected) {\\n      return rejected\\n    }\\n\\n    if (this._bodyBlob) {\\n      return readBlobAsText(this._bodyBlob)\\n    } else if (this._bodyArrayBuffer) {\\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\\n    } else if (this._bodyFormData) {\\n      throw new Error('could not read FormData body as text')\\n    } else {\\n      return Promise.resolve(this._bodyText)\\n    }\\n  }\\n\\n  if (support.formData) {\\n    this.formData = function() {\\n      return this.text().then(decode)\\n    }\\n  }\\n\\n  this.json = function() {\\n    return this.text().then(JSON.parse)\\n  }\\n\\n  return this\\n}\\n\\n// HTTP methods whose capitalization should be normalized\\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\\n\\nfunction normalizeMethod(method) {\\n  var upcased = method.toUpperCase()\\n  return methods.indexOf(upcased) > -1 ? upcased : method\\n}\\n\\nexport function Request(input, options) {\\n  options = options || {}\\n  var body = options.body\\n\\n  if (input instanceof Request) {\\n    if (input.bodyUsed) {\\n      throw new TypeError('Already read')\\n    }\\n    this.url = input.url\\n    this.credentials = input.credentials\\n    if (!options.headers) {\\n      this.headers = new Headers(input.headers)\\n    }\\n    this.method = input.method\\n    this.mode = input.mode\\n    this.signal = input.signal\\n    if (!body && input._bodyInit != null) {\\n      body = input._bodyInit\\n      input.bodyUsed = true\\n    }\\n  } else {\\n    this.url = String(input)\\n  }\\n\\n  this.credentials = options.credentials || this.credentials || 'same-origin'\\n  if (options.headers || !this.headers) {\\n    this.headers = new Headers(options.headers)\\n  }\\n  this.method = normalizeMethod(options.method || this.method || 'GET')\\n  this.mode = options.mode || this.mode || null\\n  this.signal = options.signal || this.signal\\n  this.referrer = null\\n\\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\\n    throw new TypeError('Body not allowed for GET or HEAD requests')\\n  }\\n  this._initBody(body)\\n}\\n\\nRequest.prototype.clone = function() {\\n  return new Request(this, {body: this._bodyInit})\\n}\\n\\nfunction decode(body) {\\n  var form = new FormData()\\n  body\\n    .trim()\\n    .split('&')\\n    .forEach(function(bytes) {\\n      if (bytes) {\\n        var split = bytes.split('=')\\n        var name = split.shift().replace(/\\\\+/g, ' ')\\n        var value = split.join('=').replace(/\\\\+/g, ' ')\\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\\n      }\\n    })\\n  return form\\n}\\n\\nfunction parseHeaders(rawHeaders) {\\n  var headers = new Headers()\\n  // Replace instances of \\\\r\\\\n and \\\\n followed by at least one space or horizontal tab with a space\\n  // https://tools.ietf.org/html/rfc7230#section-3.2\\n  var preProcessedHeaders = rawHeaders.replace(/\\\\r?\\\\n[\\\\t ]+/g, ' ')\\n  preProcessedHeaders.split(/\\\\r?\\\\n/).forEach(function(line) {\\n    var parts = line.split(':')\\n    var key = parts.shift().trim()\\n    if (key) {\\n      var value = parts.join(':').trim()\\n      headers.append(key, value)\\n    }\\n  })\\n  return headers\\n}\\n\\nBody.call(Request.prototype)\\n\\nexport function Response(bodyInit, options) {\\n  if (!options) {\\n    options = {}\\n  }\\n\\n  this.type = 'default'\\n  this.status = options.status === undefined ? 200 : options.status\\n  this.ok = this.status >= 200 && this.status < 300\\n  this.statusText = 'statusText' in options ? options.statusText : 'OK'\\n  this.headers = new Headers(options.headers)\\n  this.url = options.url || ''\\n  this._initBody(bodyInit)\\n}\\n\\nBody.call(Response.prototype)\\n\\nResponse.prototype.clone = function() {\\n  return new Response(this._bodyInit, {\\n    status: this.status,\\n    statusText: this.statusText,\\n    headers: new Headers(this.headers),\\n    url: this.url\\n  })\\n}\\n\\nResponse.error = function() {\\n  var response = new Response(null, {status: 0, statusText: ''})\\n  response.type = 'error'\\n  return response\\n}\\n\\nvar redirectStatuses = [301, 302, 303, 307, 308]\\n\\nResponse.redirect = function(url, status) {\\n  if (redirectStatuses.indexOf(status) === -1) {\\n    throw new RangeError('Invalid status code')\\n  }\\n\\n  return new Response(null, {status: status, headers: {location: url}})\\n}\\n\\nexport var DOMException = self.DOMException\\ntry {\\n  new DOMException()\\n} catch (err) {\\n  DOMException = function(message, name) {\\n    this.message = message\\n    this.name = name\\n    var error = Error(message)\\n    this.stack = error.stack\\n  }\\n  DOMException.prototype = Object.create(Error.prototype)\\n  DOMException.prototype.constructor = DOMException\\n}\\n\\nexport function fetch(input, init) {\\n  return new Promise(function(resolve, reject) {\\n    var request = new Request(input, init)\\n\\n    if (request.signal && request.signal.aborted) {\\n      return reject(new DOMException('Aborted', 'AbortError'))\\n    }\\n\\n    var xhr = new XMLHttpRequest()\\n\\n    function abortXhr() {\\n      xhr.abort()\\n    }\\n\\n    xhr.onload = function() {\\n      var options = {\\n        status: xhr.status,\\n        statusText: xhr.statusText,\\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\\n      }\\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\\n      resolve(new Response(body, options))\\n    }\\n\\n    xhr.onerror = function() {\\n      reject(new TypeError('Network request failed'))\\n    }\\n\\n    xhr.ontimeout = function() {\\n      reject(new TypeError('Network request failed'))\\n    }\\n\\n    xhr.onabort = function() {\\n      reject(new DOMException('Aborted', 'AbortError'))\\n    }\\n\\n    xhr.open(request.method, request.url, true)\\n\\n    if (request.credentials === 'include') {\\n      xhr.withCredentials = true\\n    } else if (request.credentials === 'omit') {\\n      xhr.withCredentials = false\\n    }\\n\\n    if ('responseType' in xhr && support.blob) {\\n      xhr.responseType = 'blob'\\n    }\\n\\n    request.headers.forEach(function(value, name) {\\n      xhr.setRequestHeader(name, value)\\n    })\\n\\n    if (request.signal) {\\n      request.signal.addEventListener('abort', abortXhr)\\n\\n      xhr.onreadystatechange = function() {\\n        // DONE (success or failure)\\n        if (xhr.readyState === 4) {\\n          request.signal.removeEventListener('abort', abortXhr)\\n        }\\n      }\\n    }\\n\\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\\n  })\\n}\\n\\nfetch.polyfill = true\\n\\nif (!self.fetch) {\\n  self.fetch = fetch\\n  self.Headers = Headers\\n  self.Request = Request\\n  self.Response = Response\\n}\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,function(t,e,r){\"use strict\";var o={searchParams:\"URLSearchParams\"in self,iterable:\"Symbol\"in self&&\"iterator\"in Symbol,blob:\"FileReader\"in self&&\"Blob\"in self&&function(){try{return new Blob,!0}catch(t){return!1}}(),formData:\"FormData\"in self,arrayBuffer:\"ArrayBuffer\"in self};if(o.arrayBuffer)var n=[\"[object Int8Array]\",\"[object Uint8Array]\",\"[object Uint8ClampedArray]\",\"[object Int16Array]\",\"[object Uint16Array]\",\"[object Int32Array]\",\"[object Uint32Array]\",\"[object Float32Array]\",\"[object Float64Array]\"],i=ArrayBuffer.isView||function(t){return t&&n.indexOf(Object.prototype.toString.call(t))>-1};function s(t){if(\"string\"!=typeof t&&(t=String(t)),/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(t))throw new TypeError(\"Invalid character in header field name\");return t.toLowerCase()}function a(t){return\"string\"!=typeof t&&(t=String(t)),t}function h(t){var e={next:function(){var e=t.shift();return{done:void 0===e,value:e}}};return o.iterable&&(e[Symbol.iterator]=function(){return e}),e}function f(t){this.map={},t instanceof f?t.forEach(function(t,e){this.append(e,t)},this):Array.isArray(t)?t.forEach(function(t){this.append(t[0],t[1])},this):t&&Object.getOwnPropertyNames(t).forEach(function(e){this.append(e,t[e])},this)}function u(t){if(t.bodyUsed)return Promise.reject(new TypeError(\"Already read\"));t.bodyUsed=!0}function d(t){return new Promise(function(e,r){t.onload=function(){e(t.result)},t.onerror=function(){r(t.error)}})}function l(t){var e=new FileReader,r=d(e);return e.readAsArrayBuffer(t),r}function y(t){if(t.slice)return t.slice(0);var e=new Uint8Array(t.byteLength);return e.set(new Uint8Array(t)),e.buffer}function c(){return this.bodyUsed=!1,this._initBody=function(t){var e;this._bodyInit=t,t?\"string\"==typeof t?this._bodyText=t:o.blob&&Blob.prototype.isPrototypeOf(t)?this._bodyBlob=t:o.formData&&FormData.prototype.isPrototypeOf(t)?this._bodyFormData=t:o.searchParams&&URLSearchParams.prototype.isPrototypeOf(t)?this._bodyText=t.toString():o.arrayBuffer&&o.blob&&((e=t)&&DataView.prototype.isPrototypeOf(e))?(this._bodyArrayBuffer=y(t.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):o.arrayBuffer&&(ArrayBuffer.prototype.isPrototypeOf(t)||i(t))?this._bodyArrayBuffer=y(t):this._bodyText=t=Object.prototype.toString.call(t):this._bodyText=\"\",this.headers.get(\"content-type\")||(\"string\"==typeof t?this.headers.set(\"content-type\",\"text/plain;charset=UTF-8\"):this._bodyBlob&&this._bodyBlob.type?this.headers.set(\"content-type\",this._bodyBlob.type):o.searchParams&&URLSearchParams.prototype.isPrototypeOf(t)&&this.headers.set(\"content-type\",\"application/x-www-form-urlencoded;charset=UTF-8\"))},o.blob&&(this.blob=function(){var t=u(this);if(t)return t;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error(\"could not read FormData body as blob\");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?u(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(l)}),this.text=function(){var t,e,r,o=u(this);if(o)return o;if(this._bodyBlob)return t=this._bodyBlob,e=new FileReader,r=d(e),e.readAsText(t),r;if(this._bodyArrayBuffer)return Promise.resolve(function(t){for(var e=new Uint8Array(t),r=new Array(e.length),o=0;o<e.length;o++)r[o]=String.fromCharCode(e[o]);return r.join(\"\")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error(\"could not read FormData body as text\");return Promise.resolve(this._bodyText)},o.formData&&(this.formData=function(){return this.text().then(m)}),this.json=function(){return this.text().then(JSON.parse)},this}f.prototype.append=function(t,e){t=s(t),e=a(e);var r=this.map[t];this.map[t]=r?r+\", \"+e:e},f.prototype.delete=function(t){delete this.map[s(t)]},f.prototype.get=function(t){return t=s(t),this.has(t)?this.map[t]:null},f.prototype.has=function(t){return this.map.hasOwnProperty(s(t))},f.prototype.set=function(t,e){this.map[s(t)]=a(e)},f.prototype.forEach=function(t,e){for(var r in this.map)this.map.hasOwnProperty(r)&&t.call(e,this.map[r],r,this)},f.prototype.keys=function(){var t=[];return this.forEach(function(e,r){t.push(r)}),h(t)},f.prototype.values=function(){var t=[];return this.forEach(function(e){t.push(e)}),h(t)},f.prototype.entries=function(){var t=[];return this.forEach(function(e,r){t.push([r,e])}),h(t)},o.iterable&&(f.prototype[Symbol.iterator]=f.prototype.entries);var p=[\"DELETE\",\"GET\",\"HEAD\",\"OPTIONS\",\"POST\",\"PUT\"];function b(t,e){var r,o,n=(e=e||{}).body;if(t instanceof b){if(t.bodyUsed)throw new TypeError(\"Already read\");this.url=t.url,this.credentials=t.credentials,e.headers||(this.headers=new f(t.headers)),this.method=t.method,this.mode=t.mode,this.signal=t.signal,n||null==t._bodyInit||(n=t._bodyInit,t.bodyUsed=!0)}else this.url=String(t);if(this.credentials=e.credentials||this.credentials||\"same-origin\",!e.headers&&this.headers||(this.headers=new f(e.headers)),this.method=(r=e.method||this.method||\"GET\",o=r.toUpperCase(),p.indexOf(o)>-1?o:r),this.mode=e.mode||this.mode||null,this.signal=e.signal||this.signal,this.referrer=null,(\"GET\"===this.method||\"HEAD\"===this.method)&&n)throw new TypeError(\"Body not allowed for GET or HEAD requests\");this._initBody(n)}function m(t){var e=new FormData;return t.trim().split(\"&\").forEach(function(t){if(t){var r=t.split(\"=\"),o=r.shift().replace(/\\+/g,\" \"),n=r.join(\"=\").replace(/\\+/g,\" \");e.append(decodeURIComponent(o),decodeURIComponent(n))}}),e}function w(t,e){e||(e={}),this.type=\"default\",this.status=void 0===e.status?200:e.status,this.ok=this.status>=200&&this.status<300,this.statusText=\"statusText\"in e?e.statusText:\"OK\",this.headers=new f(e.headers),this.url=e.url||\"\",this._initBody(t)}b.prototype.clone=function(){return new b(this,{body:this._bodyInit})},c.call(b.prototype),c.call(w.prototype),w.prototype.clone=function(){return new w(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new f(this.headers),url:this.url})},w.error=function(){var t=new w(null,{status:0,statusText:\"\"});return t.type=\"error\",t};var v=[301,302,303,307,308];w.redirect=function(t,e){if(-1===v.indexOf(e))throw new RangeError(\"Invalid status code\");return new w(null,{status:e,headers:{location:t}})};var A=self.DOMException;try{new A}catch(t){(A=function(t,e){this.message=t,this.name=e;var r=Error(t);this.stack=r.stack}).prototype=Object.create(Error.prototype),A.prototype.constructor=A}function _(t,e){return new Promise(function(r,n){var i=new b(t,e);if(i.signal&&i.signal.aborted)return n(new A(\"Aborted\",\"AbortError\"));var s=new XMLHttpRequest;function a(){s.abort()}s.onload=function(){var t,e,o={status:s.status,statusText:s.statusText,headers:(t=s.getAllResponseHeaders()||\"\",e=new f,t.replace(/\\r?\\n[\\t ]+/g,\" \").split(/\\r?\\n/).forEach(function(t){var r=t.split(\":\"),o=r.shift().trim();if(o){var n=r.join(\":\").trim();e.append(o,n)}}),e)};o.url=\"responseURL\"in s?s.responseURL:o.headers.get(\"X-Request-URL\");var n=\"response\"in s?s.response:s.responseText;r(new w(n,o))},s.onerror=function(){n(new TypeError(\"Network request failed\"))},s.ontimeout=function(){n(new TypeError(\"Network request failed\"))},s.onabort=function(){n(new A(\"Aborted\",\"AbortError\"))},s.open(i.method,i.url,!0),\"include\"===i.credentials?s.withCredentials=!0:\"omit\"===i.credentials&&(s.withCredentials=!1),\"responseType\"in s&&o.blob&&(s.responseType=\"blob\"),i.headers.forEach(function(t,e){s.setRequestHeader(e,t)}),i.signal&&(i.signal.addEventListener(\"abort\",a),s.onreadystatechange=function(){4===s.readyState&&i.signal.removeEventListener(\"abort\",a)}),s.send(void 0===i._bodyInit?null:i._bodyInit)})}_.polyfill=!0,self.fetch||(self.fetch=_,self.Headers=f,self.Request=b,self.Response=w)}]]);","extractedComments":[]}